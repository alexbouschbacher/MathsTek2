#!/usr/bin/env python3

import math
import sys
import time

def binomial_law(k, p):
    return (coef_binomial(3500, k) *  p**k * (1.0 - p)**(3500 - k))

def poisson_law(k, m):
    return ((math.exp(-m)*m**k) / math.factorial(k))

def print_tab(s, tab, timer, overld):
    i = 0
    print("%s distribution:" %s)
    while (i < 51):
        print("%d -> %.3f" %(i, tab[i]), end='')
        if (i % 6 == 5 or i == 50):
            print("")
        else:
            print("\t", end='')
        i += 1
    print("overload: %.1f%%" % overld)
    print("computation time: %.2f ms" %timer)

def hotline(t):
    i = 0
    t /= 3600.0
    m = (t * 3500) / 8
    p = m / 3500
    bino = []
    ov = 0.0
    deb = time.time()
    while (i < 51):
        res = binomial_law(i, p)
        bino.append(res)
        if (i <= 25):
            ov += res
        i += 1
    end = time.time()
    print_tab("Binomial", bino, ((end - deb) * 1000), ((1.0 - ov) * 100))
    print("")
    poisson = []
    i = 0
    ov2 = 0.0
    deb2 = time.time()
    while (i < 51):
        res = poisson_law(i, m)
        poisson.append(res)
        if (i <= 25):
            ov2 += res
        i += 1
    end2 = time.time()
    print_tab("Poisson", poisson, ((end2 - deb2) * 1000), ((1.0 - ov2) * 100))


def coef_binomial(n, k):
    return (math.factorial(n) // (math.factorial(k) * math.factorial(n - k)))

if (__name__ == "__main__"):
    try:
        if (len(sys.argv) == 2):
            hotline(int(sys.argv[1]))
        elif (len(sys.argv) == 3):
            n = int(sys.argv[1])
            k = int(sys.argv[2])
            if n < k:
                sys.exit(64)
            print("%d-combination of a %d set:" % (k, n))
            print("%ld" %(coef_binomial(n, k)))
        else:
            sys.exit(84)
    except:
        sys.exit(84)
